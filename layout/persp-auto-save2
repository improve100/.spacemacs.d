;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "loc_expert.org" "/home/tong/SparkleShare/mynotes/gtd/work/loc_expert.org" org-mode) (def-buffer "org_uml.org" "/home/tong/SparkleShare/mynotes/emacs/org_uml.org" org-mode) (def-buffer "umlsrc" "/home/tong/.spacemacs.d/snipptes/org-mode/umlsrc" snippet-mode) (def-buffer "work" "~/SparkleShare/mynotes/gtd/work/" dired-mode) (def-buffer "org-mode" "~/.spacemacs.d/snipptes/org-mode/" dired-mode) (def-buffer "snipptes" "~/.spacemacs.d/snipptes/" dired-mode) (def-buffer ".spacemacs.d" "~/.spacemacs.d/" dired-mode) (def-buffer "tong" "~/" dired-mode) (def-buffer "SparkleShare" "~/SparkleShare/" dired-mode) (def-buffer "mynotes" "~/SparkleShare/mynotes/" dired-mode) (def-buffer "gtd" "~/SparkleShare/mynotes/gtd/" dired-mode) (def-buffer "emacs" "~/SparkleShare/mynotes/emacs/" dired-mode) (def-buffer "plant_uml.pum" "/home/tong/SparkleShare/mynotes/emacs/plant_uml.pum" plantuml-mode) (def-buffer "emacs-26.3" "~/下载/emacs-26.3/" dired-mode)) (def-wconf (((min-height . 8) (min-width . 10) (min-height-ignore . 6) (min-width-ignore . 4) (min-height-safe . 2) (min-width-safe . 2) (min-pixel-height . 136) (min-pixel-width . 80) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 34) (min-pixel-width-safe . 16)) vc (pixel-width . 1920) (pixel-height . 1039) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1920) (pixel-height . 853) (total-width . 240) (total-height . 50) (normal-height . 0.819241982507289) (normal-width . 1.0) (buffer "loc_expert.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 564) (start . 270))) (leaf (last . t) (pixel-width . 1920) (pixel-height . 186) (total-width . 240) (total-height . 11) (normal-height . 0.18075801749271136) (normal-width . 1.0) (buffer "*Org-Babel Error Output*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 8) (min-width . 10) (min-height-ignore . 6) (min-width-ignore . 4) (min-height-safe . 2) (min-width-safe . 2) (min-pixel-height . 136) (min-pixel-width . 80) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 34) (min-pixel-width-safe . 16)) vc (pixel-width . 1920) (pixel-height . 1039) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1920) (pixel-height . 853) (total-width . 240) (total-height . 50) (normal-height . 0.819241982507289) (normal-width . 1.0) (buffer "loc_expert.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 564) (start . 270))) (leaf (last . t) (pixel-width . 1920) (pixel-height . 186) (total-width . 240) (total-height . 11) (normal-height . 0.18075801749271136) (normal-width . 1.0) (buffer "*Org-Babel Error Output*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) "")))) t nil nil))