;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "layers<.emacs.d>" "~/.emacs.d/layers/" dired-mode) (def-buffer "+chat" "~/.emacs.d/layers/+chat/" dired-mode) (def-buffer "init.el" "/home/casey/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "packages.el<mcu>" "/home/casey/.spacemacs.d/layers/mcu/packages.el" emacs-lisp-mode) (def-buffer ".emacs.d" "~/.emacs.d/" dired-mode) (def-buffer "assets" "~/.emacs.d/assets/" dired-mode) (def-buffer "core" "~/.emacs.d/core/" dired-mode) (def-buffer "templates<core>" "~/.emacs.d/core/templates/" dired-mode) (def-buffer "libs" "~/.emacs.d/core/libs/" dired-mode) (def-buffer "info" "~/.emacs.d/core/info/" dired-mode) (def-buffer "gnupg" "~/.emacs.d/core/gnupg/" dired-mode) (def-buffer "banners" "~/.emacs.d/core/banners/" dired-mode) (def-buffer "aprilfool" "~/.emacs.d/core/aprilfool/" dired-mode) (def-buffer "img<banners>" "~/.emacs.d/core/banners/img/" dired-mode) (def-buffer "zemacs.png" "/home/casey/.emacs.d/core/banners/img/zemacs.png" image-mode) (def-buffer "spacemacs.png" "/home/casey/.emacs.d/core/banners/img/spacemacs.png" image-mode) (def-buffer "spacemacs-badge.png" "/home/casey/.emacs.d/core/banners/img/spacemacs-badge.png" image-mode) (def-buffer "heart.png" "/home/casey/.emacs.d/core/banners/img/heart.png" image-mode) (def-buffer "slack" "~/.emacs.d/layers/+chat/slack/" dired-mode) (def-buffer "packages.el<slack>" "/home/casey/.emacs.d/layers/+chat/slack/packages.el" emacs-lisp-mode) (def-buffer "erc" "~/.emacs.d/layers/+chat/erc/" dired-mode) (def-buffer "packages.el<erc>" "/home/casey/.emacs.d/layers/+chat/erc/packages.el" emacs-lisp-mode) (def-buffer "+intl" "~/.emacs.d/layers/+intl/" dired-mode) (def-buffer "japanese" "~/.emacs.d/layers/+intl/japanese/" dired-mode) (def-buffer "packages.el<japanese>" "/home/casey/.emacs.d/layers/+intl/japanese/packages.el" emacs-lisp-mode) (def-buffer "chinese" "~/.emacs.d/layers/+intl/chinese/" dired-mode) (def-buffer "packages.el<chinese>" "/home/casey/.emacs.d/layers/+intl/chinese/packages.el" emacs-lisp-mode) (def-buffer "+fun" "~/.emacs.d/layers/+fun/" dired-mode) (def-buffer "+frameworks" "~/.emacs.d/layers/+frameworks/" dired-mode) (def-buffer "vue" "~/.emacs.d/layers/+frameworks/vue/" dired-mode) (def-buffer "packages.el<vue>" "/home/casey/.emacs.d/layers/+frameworks/vue/packages.el" emacs-lisp-mode) (def-buffer "+email" "~/.emacs.d/layers/+email/" dired-mode) (def-buffer "+emacs" "~/.emacs.d/layers/+emacs/" dired-mode) (def-buffer "org" "~/.emacs.d/layers/+emacs/org/" dired-mode) (def-buffer "packages.el<org>" "/home/casey/.emacs.d/layers/+emacs/org/packages.el" emacs-lisp-mode) (def-buffer "ibuffer" "~/.emacs.d/layers/+emacs/ibuffer/" dired-mode) (def-buffer "packages.el<ibuffer>" "/home/casey/.emacs.d/layers/+emacs/ibuffer/packages.el" emacs-lisp-mode) (def-buffer "helpful" "~/.emacs.d/layers/+emacs/helpful/" dired-mode) (def-buffer "packages.el<helpful>" "/home/casey/.emacs.d/layers/+emacs/helpful/packages.el" emacs-lisp-mode) (def-buffer "better-defaults" "~/.emacs.d/layers/+emacs/better-defaults/" dired-mode) (def-buffer "packages.el<better-defaults>" "/home/casey/.emacs.d/layers/+emacs/better-defaults/packages.el" emacs-lisp-mode) (def-buffer "+pair-programming" "~/.emacs.d/layers/+pair-programming/" dired-mode) (def-buffer "floobits" "~/.emacs.d/layers/+pair-programming/floobits/" dired-mode) (def-buffer "packages.el<floobits>" "/home/casey/.emacs.d/layers/+pair-programming/floobits/packages.el" emacs-lisp-mode) (def-buffer "+os" "~/.emacs.d/layers/+os/" dired-mode) (def-buffer "nixos" "~/.emacs.d/layers/+os/nixos/" dired-mode) (def-buffer "packages.el<nixos>" "/home/casey/.emacs.d/layers/+os/nixos/packages.el" emacs-lisp-mode) (def-buffer "osx" "~/.emacs.d/layers/+os/osx/" dired-mode) (def-buffer "packages.el<osx>" "/home/casey/.emacs.d/layers/+os/osx/packages.el" emacs-lisp-mode) (def-buffer "+fonts" "~/.emacs.d/layers/+fonts/" dired-mode) (def-buffer "unicode-fonts" "~/.emacs.d/layers/+fonts/unicode-fonts/" dired-mode) (def-buffer "packages.el<unicode-fonts>" "/home/casey/.emacs.d/layers/+fonts/unicode-fonts/packages.el" emacs-lisp-mode) (def-buffer "+completion" "~/.emacs.d/layers/+completion/" dired-mode) (def-buffer "templates<+completion>" "~/.emacs.d/layers/+completion/templates/" dired-mode) (def-buffer "packages.el<templates>" "/home/casey/.emacs.d/layers/+completion/templates/packages.el" emacs-lisp-mode) (def-buffer "mcu" "~/.spacemacs.d/layers/mcu/" dired-mode) (def-buffer "auto-completion" "~/.emacs.d/layers/+completion/auto-completion/" dired-mode) (def-buffer "packages.el<auto-completion>" "/home/casey/.emacs.d/layers/+completion/auto-completion/packages.el" emacs-lisp-mode) (def-buffer "helm" "~/.emacs.d/layers/+completion/helm/" dired-mode) (def-buffer "packages.el<helm>" "/home/casey/.emacs.d/layers/+completion/helm/packages.el" emacs-lisp-mode) (def-buffer "ivy" "~/.emacs.d/layers/+completion/ivy/" dired-mode) (def-buffer "config.el<ivy>" "/home/casey/.emacs.d/layers/+completion/ivy/config.el" emacs-lisp-mode) (def-buffer "packages.el<ivy>" "/home/casey/.emacs.d/layers/+completion/ivy/packages.el" emacs-lisp-mode) (def-buffer "+lang" "~/.emacs.d/layers/+lang/" dired-mode) (def-buffer "python" "~/.emacs.d/layers/+lang/python/" dired-mode) (def-buffer "layers.el<python>" "/home/casey/.emacs.d/layers/+lang/python/layers.el" emacs-lisp-mode) (def-buffer "funcs.el<python>" "/home/casey/.emacs.d/layers/+lang/python/funcs.el" emacs-lisp-mode) (def-buffer "config.el<python>" "/home/casey/.emacs.d/layers/+lang/python/config.el" emacs-lisp-mode) (def-buffer "layers<.spacemacs.d>" "~/.spacemacs.d/layers/" dired-mode) (def-buffer "wiki" "~/.spacemacs.d/layers/wiki/" dired-mode) (def-buffer "packages.el<wiki>" "/home/casey/.spacemacs.d/layers/wiki/packages.el" emacs-lisp-mode) (def-buffer "packages.el<python>" "/home/casey/.emacs.d/layers/+lang/python/packages.el" emacs-lisp-mode) (def-buffer "README.org<python>" "/home/casey/.emacs.d/layers/+lang/python/README.org" org-mode) (def-buffer "test.py" "/home/casey/learning/python/test.py" python-mode) (def-buffer "eaf" "~/.spacemacs.d/layers/eaf/" dired-mode) (def-buffer "packages.el<eaf>" "/home/casey/.spacemacs.d/layers/eaf/packages.el" emacs-lisp-mode) (def-buffer ".spacemacs.d" "~/.spacemacs.d/" dired-mode) (def-buffer "casey" "~/" dired-mode) (def-buffer "c-c++" "~/.emacs.d/layers/+lang/c-c++/" dired-mode) (def-buffer "packages.el<c-c++>" "/home/casey/.emacs.d/layers/+lang/c-c++/packages.el" emacs-lisp-mode) (def-buffer "layers.el<c-c++>" "/home/casey/.emacs.d/layers/+lang/c-c++/layers.el" emacs-lisp-mode) (def-buffer "config.el<c-c++>" "/home/casey/.emacs.d/layers/+lang/c-c++/config.el" emacs-lisp-mode) (def-buffer "funcs.el<c-c++>" "/home/casey/.emacs.d/layers/+lang/c-c++/funcs.el" emacs-lisp-mode) (def-buffer "img<python>" "~/.emacs.d/layers/+lang/python/img/" dired-mode) (def-buffer "python.png" "/home/casey/.emacs.d/layers/+lang/python/img/python.png" image-mode) (def-buffer "README.org<auto-completion>" "/home/casey/.emacs.d/layers/+completion/auto-completion/README.org" org-mode) (def-buffer "pyenv-mode.el" "/home/casey/.emacs.d/elpa/develop/pyenv-mode-20170801.2348/pyenv-mode.el" emacs-lisp-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 10) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 52) (min-pixel-width . 140) (min-pixel-height-ignore . 39) (min-pixel-width-ignore . 70) (min-pixel-height-safe . 13) (min-pixel-width-safe . 28)) hc (pixel-width . 1366) (pixel-height . 731) (total-width . 195) (total-height . 56) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 680) (pixel-height . 731) (total-width . 97) (total-height . 56) (normal-height . 1.0) (normal-width . 0.5) (buffer "init.el" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 28149) (start . 26593))) (leaf (last . t) (pixel-width . 686) (pixel-height . 731) (total-width . 98) (total-height . 56) (normal-height . 1.0) (normal-width . 0.5) (buffer "layers<.emacs.d>" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 583) (start . 1))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 10) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 52) (min-pixel-width . 140) (min-pixel-height-ignore . 39) (min-pixel-width-ignore . 70) (min-pixel-height-safe . 13) (min-pixel-width-safe . 28)) hc (pixel-width . 1366) (pixel-height . 731) (total-width . 195) (total-height . 56) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 680) (pixel-height . 731) (total-width . 97) (total-height . 56) (normal-height . 1.0) (normal-width . 0.5) (buffer "init.el" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 28149) (start . 26593))) (leaf (last . t) (pixel-width . 686) (pixel-height . 731) (total-width . 98) (total-height . 56) (normal-height . 1.0) (normal-width . 0.5) (buffer "layers<.emacs.d>" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 583) (start . 1)))) "")))) t nil nil))