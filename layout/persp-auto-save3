;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "ndt_node.cc" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/src/ndt_node.cc" c++-mode) (def-buffer "logic" "~/codes/autonomous_driving/src/localization/logic/" dired-mode) (def-buffer "ndt_node.hh" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/include/ndt_node.hh" c++-mode) (def-buffer "segmap_server_node.hh" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/include/segmap_server_node.hh" c++-mode) (def-buffer "include<ms_localization_segmap_server>" "~/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/include/" dired-mode) (def-buffer "ms_localization_segmap_server" "~/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/" dired-mode) (def-buffer "src<ms_localization_segmap_server>" "~/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/src/" dired-mode) (def-buffer "ros<localization>" "~/codes/autonomous_driving/src/localization/ros/" dired-mode) (def-buffer "ms_localization_ndt" "~/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/" dired-mode) (def-buffer "package.xml<ms_localization_ndt>" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/package.xml" web-mode) (def-buffer "hdl_localization" "~/codes/autonomous_driving/src/localization/logic/hdl_localization/" dired-mode) (def-buffer "apps" "~/codes/autonomous_driving/src/localization/logic/hdl_localization/apps/" dired-mode) (def-buffer "ndt_gpu_localization_nodelet.cpp" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/apps/ndt_gpu_localization_nodelet.cpp" c++-mode) (def-buffer "src<ms_localization_ndt>" "~/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/src/" dired-mode) (def-buffer "ndt_main.cc" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/src/ndt_main.cc" c++-mode) (def-buffer "package.xml<hdl_localization>" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/package.xml" web-mode) (def-buffer "include<ms_localization_ndt>" "~/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/include/" dired-mode) (def-buffer "localization" "~/codes/autonomous_driving/src/localization/" dired-mode) (def-buffer "launch<ms_localization_segmap_server>" "~/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/launch/" dired-mode) (def-buffer "segmap_server.launch" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/launch/segmap_server.launch" nxml-mode) (def-buffer "CMakeLists.txt<ms_localization_ndt>" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/CMakeLists.txt" cmake-mode) (def-buffer "CMakeLists.txt<hdl_localization>" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/CMakeLists.txt" cmake-mode) (def-buffer "ms_localization_segmap_server_lib<logic>" "~/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/" dired-mode) (def-buffer "src<ms_localization_segmap_server_lib>" "~/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/src/" dired-mode) (def-buffer "segmap_server.cc" "/home/tong/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/src/segmap_server.cc" c++-mode) (def-buffer "localization_debug_d.launch" "/home/tong/codes/autonomous_driving/src/common/ros/ms_common_launch/launch/localization_debug_d.launch" nxml-mode) (def-buffer "launch<ms_common_launch>" "~/codes/autonomous_driving/src/common/ros/ms_common_launch/launch/" dired-mode) (def-buffer "ms_common_launch" "~/codes/autonomous_driving/src/common/ros/ms_common_launch/" dired-mode) (def-buffer "ros<common>" "~/codes/autonomous_driving/src/common/ros/" dired-mode) (def-buffer "common" "~/codes/autonomous_driving/src/common/" dired-mode) (def-buffer "src<autonomous_driving>" "~/codes/autonomous_driving/src/" dired-mode) (def-buffer "segmap_server_node.cc" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/src/segmap_server_node.cc" c++-mode) (def-buffer "include<ms_localization_segmap_server_lib>" "~/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/include/" dired-mode) (def-buffer "ms_localization_segmap_server_lib<include>" "~/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/include/ms_localization_segmap_server_lib/" dired-mode) (def-buffer "segmap_server.hh" "/home/tong/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/include/ms_localization_segmap_server_lib/segmap_server.hh" c++-mode) (def-buffer "CMakeLists.txt<ms_localization_segmap_server>" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/CMakeLists.txt" cmake-mode) (def-buffer "segmap" "~/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/segmap/" dired-mode) (def-buffer "package.xml<ms_localization_segmap_server>" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/package.xml" web-mode) (def-buffer "segmap_server_node_params.hh" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_segmap_server/include/segmap_server_node_params.hh" c++-mode) (def-buffer "test" "~/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/test/" dired-mode) (def-buffer "main_test.cc" "/home/tong/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/test/main_test.cc" c++-mode) (def-buffer "package.xml<ms_localization_segmap_server_lib>" "/home/tong/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/package.xml" web-mode) (def-buffer "CMakeLists.txt<ms_localization_segmap_server_lib>" "/home/tong/codes/autonomous_driving/src/localization/logic/ms_localization_segmap_server_lib/CMakeLists.txt" cmake-mode) (def-buffer "ndt_gpu<logic>" "~/codes/autonomous_driving/src/localization/logic/ndt_gpu/" dired-mode) (def-buffer "src<ndt_gpu>" "~/codes/autonomous_driving/src/localization/logic/ndt_gpu/src/" dired-mode) (def-buffer "NormalDistributionsTransform.cu" "/home/tong/codes/autonomous_driving/src/localization/logic/ndt_gpu/src/NormalDistributionsTransform.cu" cuda-mode) (def-buffer "Registration.cu" "/home/tong/codes/autonomous_driving/src/localization/logic/ndt_gpu/src/Registration.cu" c++-mode) (def-buffer "include<ndt_gpu>" "~/codes/autonomous_driving/src/localization/logic/ndt_gpu/include/" dired-mode) (def-buffer "ndt_gpu<include>" "~/codes/autonomous_driving/src/localization/logic/ndt_gpu/include/ndt_gpu/" dired-mode) (def-buffer "Registration.h" "/home/tong/codes/autonomous_driving/src/localization/logic/ndt_gpu/include/ndt_gpu/Registration.h" c++-mode) (def-buffer "NormalDistributionsTransform.h" "/home/tong/codes/autonomous_driving/src/localization/logic/ndt_gpu/include/ndt_gpu/NormalDistributionsTransform.h" c++-mode) (def-buffer "common.h" "/home/tong/codes/autonomous_driving/src/localization/logic/ndt_gpu/include/ndt_gpu/common.h" c++-mode) (def-buffer "launch<hdl_localization>" "~/codes/autonomous_driving/src/localization/logic/hdl_localization/launch/" dired-mode) (def-buffer "ndt_localization.launch" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/launch/ndt_localization.launch" nxml-mode) (def-buffer "ndt_localization1.launch" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/launch/ndt_localization1.launch" nxml-mode) (def-buffer "scripts" "~/codes/autonomous_driving/src/localization/logic/hdl_localization/scripts/" dired-mode) (def-buffer "odom2map.py" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/scripts/odom2map.py" python-mode) (def-buffer "msf_localization" "~/codes/autonomous_driving/src/localization/logic/msf_localization/" dired-mode) (def-buffer "src<msf_localization>" "~/codes/autonomous_driving/src/localization/logic/msf_localization/src/" dired-mode) (def-buffer "ms_gps_vehicle_data_node.cpp" "/home/tong/codes/autonomous_driving/src/localization/logic/msf_localization/src/ms_gps_vehicle_data_node.cpp" c++-mode) (def-buffer "localization_debug_t.launch" "/home/tong/codes/autonomous_driving/src/common/ros/ms_common_launch/launch/localization_debug_t.launch" nxml-mode) (def-buffer "localization_debug_b.launch" "/home/tong/codes/autonomous_driving/src/common/ros/ms_common_launch/launch/localization_debug_b.launch" nxml-mode) (def-buffer "segmap_server_nodelet.cpp" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/apps/segmap_server_nodelet.cpp" c++-mode)) (def-wconf (((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 136) (min-pixel-width . 180) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 72) (min-pixel-height-safe . 34) (min-pixel-width-safe . 36)) hc (pixel-width . 1920) (pixel-height . 1022) (total-width . 213) (total-height . 60) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (vc (pixel-width . 945) (pixel-height . 1022) (total-width . 105) (total-height . 60) (normal-height . 1.0) (normal-width . 0.4921875) (combination-limit . t) (leaf (pixel-width . 945) (pixel-height . 394) (total-width . 105) (total-height . 23) (normal-height . 0.38188976377952755) (normal-width . 1.0) (buffer "ndt_node.hh" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 862) (start . 422))) (leaf (last . t) (pixel-width . 945) (pixel-height . 628) (total-width . 105) (total-height . 37) (normal-height . 0.6181102362204722) (normal-width . 1.0) (buffer "ndt_node.cc" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 7108) (start . 6999)))) (vc (last . t) (pixel-width . 975) (pixel-height . 1022) (total-width . 108) (total-height . 60) (normal-height . 1.0) (normal-width . 0.5078125) (combination-limit . t) (leaf (pixel-width . 975) (pixel-height . 544) (total-width . 108) (total-height . 32) (normal-height . 0.5322896281800391) (normal-width . 1.0) (buffer "logic" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 584) (start . 1))) (leaf (last . t) (pixel-width . 975) (pixel-height . 478) (total-width . 108) (total-height . 28) (normal-height . 0.46771037181996084) (normal-width . 1.0) (buffer "segmap_server_node.hh" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1312) (start . 1171)))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 136) (min-pixel-width . 180) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 72) (min-pixel-height-safe . 34) (min-pixel-width-safe . 36)) hc (pixel-width . 1920) (pixel-height . 1022) (total-width . 213) (total-height . 60) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (vc (pixel-width . 945) (pixel-height . 1022) (total-width . 105) (total-height . 60) (normal-height . 1.0) (normal-width . 0.4921875) (combination-limit . t) (leaf (pixel-width . 945) (pixel-height . 394) (total-width . 105) (total-height . 23) (normal-height . 0.38188976377952755) (normal-width . 1.0) (buffer "ndt_node.hh" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 862) (start . 422))) (leaf (last . t) (pixel-width . 945) (pixel-height . 628) (total-width . 105) (total-height . 37) (normal-height . 0.6181102362204722) (normal-width . 1.0) (buffer "ndt_node.cc" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 7108) (start . 6999)))) (vc (last . t) (pixel-width . 975) (pixel-height . 1022) (total-width . 108) (total-height . 60) (normal-height . 1.0) (normal-width . 0.5078125) (combination-limit . t) (leaf (pixel-width . 975) (pixel-height . 544) (total-width . 108) (total-height . 32) (normal-height . 0.5322896281800391) (normal-width . 1.0) (buffer "logic" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 584) (start . 1))) (leaf (last . t) (pixel-width . 975) (pixel-height . 478) (total-width . 108) (total-height . 28) (normal-height . 0.46771037181996084) (normal-width . 1.0) (buffer "segmap_server_node.hh" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1312) (start . 1171))))) "")))) t nil nil) (def-persp "2" ((def-buffer "org学习.org" "/home/tong/SparkleShare/mynotes/emacs/org学习.org" org-mode) (def-buffer "chrome.org" "/home/tong/SparkleShare/mynotes/gtd/chrome.org" org-mode) (def-buffer "buglist.org" "/home/tong/SparkleShare/mynotes/gtd/buglist.org" org-mode) (def-buffer "task.org" "/home/tong/SparkleShare/mynotes/gtd/task.org" org-mode) (def-buffer "20190531.org" "/home/tong/SparkleShare/mynotes/gtd/20190531.org" org-mode) (def-buffer "gtd" "~/SparkleShare/mynotes/gtd/" dired-mode) (def-buffer ".gitignore" "/home/tong/SparkleShare/mynotes/.gitignore" gitignore-mode) (def-buffer "README.org<org>" "/home/tong/.emacs.d/layers/+emacs/org/README.org" org-mode) (def-buffer "README.org<spacemacs-org>" "/home/tong/.emacs.d/layers/+spacemacs/spacemacs-org/README.org" org-mode) (def-buffer "编写高质量代码改善python程序的91条建议.org" "/home/tong/SparkleShare/mynotes/python/编写高质量代码改善python程序的91条建议.org" org-mode) (def-buffer "python" "~/SparkleShare/mynotes/python/" dired-mode) (def-buffer "config.el" "/home/tong/.emacs.d/layers/+lang/c-c++/config.el" emacs-lisp-mode) (def-buffer "packages.el" "/home/tong/.emacs.d/layers/+lang/c-c++/packages.el" emacs-lisp-mode) (def-buffer "c-c++" "~/.emacs.d/layers/+lang/c-c++/" dired-mode) (def-buffer "init.el" "/home/tong/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "elisp_learning.org" "/home/tong/SparkleShare/mynotes/emacs/elisp_learning.org" org-mode) (def-buffer "emacs" "~/SparkleShare/mynotes/emacs/" dired-mode) (def-buffer "mynotes" "~/SparkleShare/mynotes/" dired-mode) (def-buffer "README.org<c-c++>" "/home/tong/.emacs.d/layers/+lang/c-c++/README.org" org-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 180) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 72) (min-pixel-height-safe . 17) (min-pixel-width-safe . 36)) hc (pixel-width . 1920) (pixel-height . 1022) (total-width . 213) (total-height . 60) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (leaf (pixel-width . 963) (pixel-height . 1022) (total-width . 107) (total-height . 60) (normal-height . 1.0) (normal-width . 0.5015625) (buffer "init.el" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 29577) (start . 28008))) (leaf (last . t) (pixel-width . 957) (pixel-height . 1022) (total-width . 106) (total-height . 60) (normal-height . 1.0) (normal-width . 0.4984375) (buffer "org学习.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 490) (start . 1))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 180) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 72) (min-pixel-height-safe . 17) (min-pixel-width-safe . 36)) hc (pixel-width . 1920) (pixel-height . 1022) (total-width . 213) (total-height . 60) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (leaf (pixel-width . 963) (pixel-height . 1022) (total-width . 107) (total-height . 60) (normal-height . 1.0) (normal-width . 0.5015625) (buffer "init.el" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 29577) (start . 28008))) (leaf (last . t) (pixel-width . 957) (pixel-height . 1022) (total-width . 106) (total-height . 60) (normal-height . 1.0) (normal-width . 0.4984375) (buffer "org学习.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 490) (start . 1)))) "")))) nil nil nil))