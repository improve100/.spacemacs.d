;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "loam2" "/home/tong" dired-mode) (def-buffer "CMakeLists.txt<loam2>" "/home/tong/下载/catkin_new/src/slam/loam2/CMakeLists.txt" cmake-mode) (def-buffer "src<loam2>" "~/下载/catkin_new/src/slam/loam2/src/" dired-mode) (def-buffer "lib<loam2>" "~/下载/catkin_new/src/slam/loam2/src/lib/" dired-mode) (def-buffer "package.xml<loam2>" "/home/tong/下载/catkin_new/src/slam/loam2/package.xml" web-mode) (def-buffer "loam_mapping.sh<loam2>" "/home/tong/下载/catkin_new/src/slam/loam2/launch/loam_mapping.sh" sh-mode) (def-buffer "loam_mapping.xml" "/home/tong/下载/catkin_new/src/slam/loam2/launch/loam_mapping.xml" web-mode) (def-buffer "CMakeLists.txt<loam2/src/lib>" "/home/tong/下载/catkin_new/src/slam/loam2/src/lib/CMakeLists.txt" cmake-mode) (def-buffer "include<loam2>" "~/下载/catkin_new/src/slam/loam2/include/" dired-mode) (def-buffer "loam" "~/下载/catkin_new/src/slam/loam2/include/loam/" dired-mode) (def-buffer "nanoflann.hpp" "/home/tong/下载/catkin_new/src/slam/loam2/include/loam/nanoflann.hpp" c++-mode) (def-buffer "CloudReceiver.cpp<loam2>" "/home/tong/下载/catkin_new/src/slam/loam2/src/lib/CloudReceiver.cpp" c++-mode) (def-buffer "LaserMapping.cpp<loam2>" "/home/tong/下载/catkin_new/src/slam/loam2/src/lib/LaserMapping.cpp" c++-mode) (def-buffer "quickstart.md" "/home/tong/下载/catkin_new/src/slam/loam2/doc/quickstart.md" markdown-mode) (def-buffer "cloud_receiver_node.cpp<loam2>" "/home/tong/下载/catkin_new/src/slam/loam2/src/cloud_receiver_node.cpp" c++-mode) (def-buffer "TransformMaintenance.cpp<loam2>" "/home/tong/下载/catkin_new/src/slam/loam2/src/lib/TransformMaintenance.cpp" c++-mode) (def-buffer "slam" "~/下载/catkin_new/src/slam/" dired-mode) (def-buffer "src<catkin_new>" "~/下载/catkin_new/src/" dired-mode) (def-buffer "catkin_new" "~/下载/catkin_new/" dired-mode) (def-buffer ".vscode" "~/下载/catkin_new/.vscode/" dired-mode) (def-buffer "tasks.json" "/home/tong/下载/catkin_new/.vscode/tasks.json" fundamental-mode) (def-buffer "tags" "/home/tong/下载/catkin_new/.vscode/tags" fundamental-mode) (def-buffer "launch.json" "/home/tong/下载/catkin_new/.vscode/launch.json" fundamental-mode) (def-buffer "market" "~/SparkleShare/mynotes/market/" dired-mode) (def-buffer "new_day.org" "/home/tong/SparkleShare/mynotes/ubuntu/new_day.org" org-mode) (def-buffer "ubuntu" "~/SparkleShare/mynotes/ubuntu/" dired-mode) (def-buffer "pcl_install.org" "/home/tong/SparkleShare/mynotes/pcl/pcl_install.org" org-mode) (def-buffer "opencv_install.org" "/home/tong/SparkleShare/mynotes/opencv/opencv_install.org" org-mode) (def-buffer "pcl" "~/SparkleShare/mynotes/pcl/" dired-mode) (def-buffer "opencv" "~/SparkleShare/mynotes/opencv/" dired-mode) (def-buffer "self-driving-platform.org" "/home/tong/SparkleShare/mynotes/market/self-driving-platform.org" org-mode) (def-buffer "How to start a GUI software on a remote Linux PC via SSH
" nil fundamental-mode) (def-buffer "下载" "~/下载/" dired-mode) (def-buffer "capture.bmp" "/home/tong/下载/catkin_new/src/slam/loam2/capture.bmp" image-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 90) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 36) (min-pixel-height-safe . 17) (min-pixel-width-safe . 18)) leaf (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "loam2" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 697) (start . 1)))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 90) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 36) (min-pixel-height-safe . 17) (min-pixel-width-safe . 18)) leaf (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "loam2" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 697) (start . 1))) "")))) t nil nil) (def-persp "autoware" ((def-buffer "ndt_matching.cpp" "/home/tong/3rdparty/Autoware/ros/src/computing/perception/localization/packages/lidar_localizer/nodes/ndt_matching/ndt_matching.cpp" c++-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 90) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 72) (min-pixel-height-safe . 17) (min-pixel-width-safe . 18)) leaf (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "ndt_matching.cpp" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 58823) (start . 57513)))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 90) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 72) (min-pixel-height-safe . 17) (min-pixel-width-safe . 18)) leaf (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "ndt_matching.cpp" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 58823) (start . 57513))) "")))) nil nil nil) (def-persp "loam" ((def-buffer "tong" "~/" dired-mode) (def-buffer "3rdparty" "~/3rdparty/" dired-mode) (def-buffer "loam_ws" "~/3rdparty/loam_ws/" dired-mode) (def-buffer "src<loam_ws>" "~/3rdparty/loam_ws/src/" dired-mode) (def-buffer "lib<loam_velodyne>" "~/3rdparty/loam_ws/src/loam_velodyne/src/lib/" dired-mode) (def-buffer "LaserMapping.cpp<loam_velodyne>" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/lib/LaserMapping.cpp" c++-mode) (def-buffer "LaserOdometry.cpp" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/lib/LaserOdometry.cpp" c++-mode) (def-buffer "git" "~/SparkleShare/mynotes/git/" dired-mode) (def-buffer "fetch_pr.org" "/home/tong/SparkleShare/mynotes/git/fetch_pr.org" org-mode) (def-buffer "loam_mapping.launch" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/launch/loam_mapping.launch" fundamental-mode) (def-buffer "MultiScanRegistration.cpp" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/lib/MultiScanRegistration.cpp" c++-mode) (def-buffer "launch" "~/3rdparty/loam_ws/src/loam_velodyne/launch/" dired-mode) (def-buffer "ScanRegistration.cpp" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/lib/ScanRegistration.cpp" c++-mode) (def-buffer "multi_scan_registration_node.cpp" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/multi_scan_registration_node.cpp" c++-mode) (def-buffer "scanRegistration.cpp" nil c++-mode) (def-buffer "home" "/home/" dired-mode) (def-buffer ".spacemacs.d" "~/.spacemacs.d/" dired-mode) (def-buffer "init.el" "/home/tong/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "SparkleShare" "~/SparkleShare/" dired-mode) (def-buffer "gtd" "~/SparkleShare/mynotes/gtd/" dired-mode) (def-buffer "chrome.org" "/home/tong/SparkleShare/mynotes/gtd/chrome.org" org-mode) (def-buffer "A_B_ssh_no_passwd.org" "/home/tong/SparkleShare/mynotes/ubuntu/A_B_ssh_no_passwd.org" org-mode) (def-buffer ".tmux.conf<ubuntu>" "/home/tong/SparkleShare/mynotes/ubuntu/.tmux.conf" conf-space-mode) (def-buffer "win10_ubuntu1604.org" "/home/tong/SparkleShare/mynotes/ubuntu/win10_ubuntu1604.org" org-mode) (def-buffer "emacs" "~/SparkleShare/mynotes/emacs/" dired-mode) (def-buffer "dired-快捷键.org" "/home/tong/SparkleShare/mynotes/emacs/dired-快捷键.org" org-mode) (def-buffer "start_gui_on_remote_pc.org" "/home/tong/SparkleShare/mynotes/ubuntu/start_gui_on_remote_pc.org" org-mode) (def-buffer "nvida_driver_install.org" "/home/tong/SparkleShare/mynotes/ubuntu/nvida_driver_install.org" org-mode) (def-buffer "samba_install.org" "/home/tong/SparkleShare/mynotes/ubuntu/samba_install.org" org-mode) (def-buffer ".tmux.conf<tong>" "/home/tong/.tmux.conf" conf-space-mode) (def-buffer "chrome.org<sparkleshare>" nil org-mode) (def-buffer "loam_velodyne<src>" "~/3rdparty/loam_ws/src/loam_velodyne/" dired-mode) (def-buffer "src<loam_velodyne>" "~/3rdparty/loam_ws/src/loam_velodyne/src/" dired-mode) (def-buffer "laser_mapping_node.cpp" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/laser_mapping_node.cpp" c++-mode) (def-buffer "common.h" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/include/loam_velodyne/common.h" c++-mode) (def-buffer "BasicLaserMapping.h" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/include/loam_velodyne/BasicLaserMapping.h" c++-mode) (def-buffer "BasicLaserMapping.cpp" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/lib/BasicLaserMapping.cpp" c++-mode) (def-buffer "include<loam_velodyne>" "~/3rdparty/loam_ws/src/loam_velodyne/include/" dired-mode) (def-buffer "loam_velodyne<include>" "~/3rdparty/loam_ws/src/loam_velodyne/include/loam_velodyne/" dired-mode) (def-buffer "LaserMapping.h" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/include/loam_velodyne/LaserMapping.h" c++-mode) (def-buffer "TransformMaintenance.cpp<loam_velodyne>" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/lib/TransformMaintenance.cpp" c++-mode) (def-buffer "loam_mapping.sh<loam_velodyne>" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/launch/loam_mapping.sh" sh-mode) (def-buffer "CloudReceiver.h" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/include/loam_velodyne/CloudReceiver.h" c++-mode) (def-buffer "cloud_receiver_node.cpp<loam_velodyne>" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/cloud_receiver_node.cpp" c++-mode) (def-buffer "math_utils.h" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/lib/math_utils.h" c++-mode) (def-buffer "CMakeLists.txt<loam_velodyne>" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/CMakeLists.txt" cmake-mode) (def-buffer "package.xml<loam_velodyne>" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/package.xml" web-mode) (def-buffer "laser_odometry_node.cpp" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/laser_odometry_node.cpp" c++-mode) (def-buffer "CMakeLists.txt<loam_velodyne/src/lib>" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/lib/CMakeLists.txt" cmake-mode) (def-buffer "CloudReceiver.cpp<loam_velodyne>" "/home/tong/3rdparty/loam_ws/src/loam_velodyne/src/lib/CloudReceiver.cpp" c++-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 16) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 180) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 144) (min-pixel-height-safe . 17) (min-pixel-width-safe . 36)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (leaf (pixel-width . 963) (pixel-height . 1039) (total-width . 107) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5015625) (buffer "CloudReceiver.cpp<loam_velodyne>" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1753) (start . 912))) (leaf (last . t) (pixel-width . 957) (pixel-height . 1039) (total-width . 106) (total-height . 61) (normal-height . 1.0) (normal-width . 0.4984375) (buffer "common.h" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 2493) (start . 1950))))) (def-params ((gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 16) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 180) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 144) (min-pixel-height-safe . 17) (min-pixel-width-safe . 36)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (leaf (pixel-width . 963) (pixel-height . 1039) (total-width . 107) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5015625) (buffer "CloudReceiver.cpp<loam_velodyne>" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1753) (start . 912))) (leaf (last . t) (pixel-width . 957) (pixel-height . 1039) (total-width . 106) (total-height . 61) (normal-height . 1.0) (normal-width . 0.4984375) (buffer "common.h" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 2493) (start . 1950)))) "")) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-last-slot . 1))) nil nil nil))