;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "学习slam理论.org" "/home/tong/SparkleShare/mynotes/mathematics/学习slam理论.org" org-mode) (def-buffer "movie" "/home/tong/.spacemacs.d/snipptes/latex-mode/movie" snippet-mode) (def-buffer "math" "/home/tong/.spacemacs.d/snipptes/latex-mode/math" snippet-mode) (def-buffer "latex-mode" "~/.spacemacs.d/snipptes/latex-mode/" dired-mode) (def-buffer "newcommand" "/home/tong/.spacemacs.d/snipptes/latex-mode/newcommand" snippet-mode) (def-buffer "snipptes" "~/.spacemacs.d/snipptes/" dired-mode) (def-buffer ".spacemacs.d" "~/.spacemacs.d/" dired-mode) (def-buffer "tong" "~/" dired-mode) (def-buffer "SparkleShare" "~/SparkleShare/" dired-mode) (def-buffer "mynotes" "~/SparkleShare/mynotes/" dired-mode) (def-buffer "mathematics" "~/SparkleShare/mynotes/mathematics/" dired-mode) (def-buffer "cout.cpp" "/home/tong/SparkleShare/mynotes/c++/cout.cpp" c++-mode) (def-buffer "python" "/home/tong/.spacemacs.d/snipptes/latex-mode/python" snippet-mode) (def-buffer "includegraphics" "/home/tong/.spacemacs.d/snipptes/latex-mode/includegraphics" snippet-mode) (def-buffer "if" "/home/tong/.spacemacs.d/snipptes/latex-mode/if" snippet-mode) (def-buffer "cite" "/home/tong/.spacemacs.d/snipptes/latex-mode/cite" snippet-mode) (def-buffer "capgls" "/home/tong/.spacemacs.d/snipptes/latex-mode/capgls" snippet-mode) (def-buffer "block" "/home/tong/.spacemacs.d/snipptes/latex-mode/block" snippet-mode) (def-buffer "begin" "/home/tong/.spacemacs.d/snipptes/latex-mode/begin" snippet-mode) (def-buffer "axiom" "/home/tong/.spacemacs.d/snipptes/latex-mode/axiom" snippet-mode) (def-buffer "frac" "/home/tong/.spacemacs.d/snipptes/latex-mode/frac" snippet-mode) (def-buffer "org-mode" "~/.spacemacs.d/snipptes/org-mode/" dired-mode) (def-buffer "latex" "/home/tong/.spacemacs.d/snipptes/org-mode/latex" snippet-mode) (def-buffer "head" "/home/tong/.spacemacs.d/snipptes/org-mode/head" snippet-mode) (def-buffer "python-mode" "~/.spacemacs.d/snipptes/python-mode/" dired-mode) (def-buffer "assertEqual" "/home/tong/.spacemacs.d/snipptes/python-mode/assertEqual" snippet-mode) (def-buffer "arg" "/home/tong/.spacemacs.d/snipptes/python-mode/arg" snippet-mode) (def-buffer "all" "/home/tong/.spacemacs.d/snipptes/python-mode/all" snippet-mode) (def-buffer "usepackage" "/home/tong/.spacemacs.d/snipptes/latex-mode/usepackage" snippet-mode) (def-buffer "alg" "/home/tong/.spacemacs.d/snipptes/latex-mode/alg" snippet-mode) (def-buffer "alertblock" "/home/tong/.spacemacs.d/snipptes/latex-mode/alertblock" snippet-mode) (def-buffer "acronym" "/home/tong/.spacemacs.d/snipptes/latex-mode/acronym" snippet-mode) (def-buffer "cmake-mode" "~/.spacemacs.d/snipptes/cmake-mode/" dired-mode) (def-buffer "cmake_minimum_required" "/home/tong/.spacemacs.d/snipptes/cmake-mode/cmake_minimum_required" snippet-mode) (def-buffer "project" "/home/tong/.spacemacs.d/snipptes/cmake-mode/project" snippet-mode) (def-buffer "macro" "/home/tong/.spacemacs.d/snipptes/cmake-mode/macro" snippet-mode) (def-buffer "function" "/home/tong/.spacemacs.d/snipptes/cmake-mode/function" snippet-mode) (def-buffer "c++-mode" "~/.spacemacs.d/snipptes/c++-mode/" dired-mode) (def-buffer "erase" "/home/tong/.spacemacs.d/snipptes/c++-mode/erase" snippet-mode) (def-buffer "copy_backward" "/home/tong/.spacemacs.d/snipptes/c++-mode/copy_backward" snippet-mode) (def-buffer "copy" "/home/tong/.spacemacs.d/snipptes/c++-mode/copy" snippet-mode) (def-buffer "class" "/home/tong/.spacemacs.d/snipptes/c++-mode/class" snippet-mode) (def-buffer "cin" "/home/tong/.spacemacs.d/snipptes/c++-mode/cin" snippet-mode) (def-buffer "cerr" "/home/tong/.spacemacs.d/snipptes/c++-mode/cerr" snippet-mode) (def-buffer "boost_require" "/home/tong/.spacemacs.d/snipptes/c++-mode/boost_require" snippet-mode) (def-buffer "beginend" "/home/tong/.spacemacs.d/snipptes/c++-mode/beginend" snippet-mode) (def-buffer "assert" "/home/tong/.spacemacs.d/snipptes/c++-mode/assert" snippet-mode) (def-buffer "any_of" "/home/tong/.spacemacs.d/snipptes/c++-mode/any_of" snippet-mode) (def-buffer "all_of" "/home/tong/.spacemacs.d/snipptes/c++-mode/all_of" snippet-mode) (def-buffer "adjacent_find" "/home/tong/.spacemacs.d/snipptes/c++-mode/adjacent_find" snippet-mode) (def-buffer "accumulate-with-closure" "/home/tong/.spacemacs.d/snipptes/c++-mode/accumulate-with-closure" snippet-mode) (def-buffer "accumulate" "/home/tong/.spacemacs.d/snipptes/c++-mode/accumulate" snippet-mode) (def-buffer "code" "/home/tong/.spacemacs.d/snipptes/org-mode/code" snippet-mode) (def-buffer "blog" "/home/tong/.spacemacs.d/snipptes/org-mode/blog" snippet-mode) (def-buffer "begin_quote" "/home/tong/.spacemacs.d/snipptes/org-mode/begin_quote" snippet-mode) (def-buffer "begin_export_latex" "/home/tong/.spacemacs.d/snipptes/org-mode/begin_export_latex" snippet-mode) (def-buffer "begin_export_html" "/home/tong/.spacemacs.d/snipptes/org-mode/begin_export_html" snippet-mode) (def-buffer "begin_export_ascii" "/home/tong/.spacemacs.d/snipptes/org-mode/begin_export_ascii" snippet-mode) (def-buffer "begin_example" "/home/tong/.spacemacs.d/snipptes/org-mode/begin_example" snippet-mode) (def-buffer "begin_comment" "/home/tong/.spacemacs.d/snipptes/org-mode/begin_comment" snippet-mode) (def-buffer "begin_center" "/home/tong/.spacemacs.d/snipptes/org-mode/begin_center" snippet-mode) (def-buffer "dot" "/home/tong/.spacemacs.d/snipptes/org-mode/dot" snippet-mode) (def-buffer "elisp" "/home/tong/.spacemacs.d/snipptes/org-mode/elisp" snippet-mode) (def-buffer "embedded" "/home/tong/.spacemacs.d/snipptes/org-mode/embedded" snippet-mode) (def-buffer "entry" "/home/tong/.spacemacs.d/snipptes/org-mode/entry" snippet-mode) (def-buffer "example" "/home/tong/.spacemacs.d/snipptes/org-mode/example" snippet-mode) (def-buffer "export" "/home/tong/.spacemacs.d/snipptes/org-mode/export" snippet-mode) (def-buffer "figure" "/home/tong/.spacemacs.d/snipptes/org-mode/figure" snippet-mode) (def-buffer "img" "/home/tong/.spacemacs.d/snipptes/org-mode/img" snippet-mode) (def-buffer "jupyter" "/home/tong/.spacemacs.d/snipptes/org-mode/jupyter" snippet-mode) (def-buffer "matrix" "/home/tong/.spacemacs.d/snipptes/org-mode/matrix" snippet-mode) (def-buffer "quote" "/home/tong/.spacemacs.d/snipptes/org-mode/quote" snippet-mode) (def-buffer "src" "/home/tong/.spacemacs.d/snipptes/org-mode/src" snippet-mode) (def-buffer "srcname" "/home/tong/.spacemacs.d/snipptes/org-mode/srcname" snippet-mode) (def-buffer "todo" "/home/tong/.spacemacs.d/snipptes/org-mode/todo" snippet-mode) (def-buffer "verse" "/home/tong/.spacemacs.d/snipptes/org-mode/verse" snippet-mode) (def-buffer "width" "/home/tong/.spacemacs.d/snipptes/org-mode/width" snippet-mode) (def-buffer "math_basic.org" "/home/tong/SparkleShare/mynotes/mathematics/math_basic.org" org-mode) (def-buffer "c++" "~/SparkleShare/mynotes/c++/" dired-mode) (def-buffer "c++_test.org" "/home/tong/SparkleShare/mynotes/c++/c++_test.org" org-mode)) (def-wconf (((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 136) (min-pixel-width . 160) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 34) (min-pixel-width-safe . 32)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 1039) (total-width . 120) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5) (buffer "学习slam理论.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1320) (start . 780))) (vc (last . t) (pixel-width . 960) (pixel-height . 1039) (total-width . 120) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 520) (total-width . 120) (total-height . 31) (normal-height . 0.5004812319538018) (normal-width . 1.0) (buffer "cout.cpp" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 536) (start . 242))) (leaf (last . t) (pixel-width . 960) (pixel-height . 519) (total-width . 120) (total-height . 30) (normal-height . 0.49951876804619827) (normal-width . 1.0) (buffer "movie" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 113) (start . 1)))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 136) (min-pixel-width . 160) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 34) (min-pixel-width-safe . 32)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 1039) (total-width . 120) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5) (buffer "学习slam理论.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1320) (start . 780))) (vc (last . t) (pixel-width . 960) (pixel-height . 1039) (total-width . 120) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 520) (total-width . 120) (total-height . 31) (normal-height . 0.5004812319538018) (normal-width . 1.0) (buffer "cout.cpp" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 536) (start . 242))) (leaf (last . t) (pixel-width . 960) (pixel-height . 519) (total-width . 120) (total-height . 30) (normal-height . 0.49951876804619827) (normal-width . 1.0) (buffer "movie" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 113) (start . 1))))) "")))) t nil nil))