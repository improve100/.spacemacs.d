;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "学习slam理论.org" "/home/tong/SparkleShare/mynotes/mathematics/学习slam理论.org" org-mode) (def-buffer "init.el" "/home/tong/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "c++_test.org" "/home/tong/SparkleShare/mynotes/c++/c++_test.org" org-mode) (def-buffer "lim" "/home/tong/.spacemacs.d/snipptes/org-mode/lim" snippet-mode) (def-buffer "org-mode" "~/.spacemacs.d/snipptes/org-mode/" dired-mode) (def-buffer "integ" "/home/tong/.spacemacs.d/snipptes/org-mode/integ" snippet-mode) (def-buffer "sum" "/home/tong/.spacemacs.d/snipptes/org-mode/sum" snippet-mode) (def-buffer "frac" "/home/tong/.spacemacs.d/snipptes/org-mode/frac" snippet-mode) (def-buffer "partial" "/home/tong/.spacemacs.d/snipptes/org-mode/partial" snippet-mode) (def-buffer "math" "/home/tong/.spacemacs.d/snipptes/org-mode/math" snippet-mode) (def-buffer "Determinant" "/home/tong/.spacemacs.d/snipptes/org-mode/Determinant" snippet-mode) (def-buffer "matrix" "/home/tong/.spacemacs.d/snipptes/org-mode/matrix" snippet-mode) (def-buffer "cppsrc" "/home/tong/.spacemacs.d/snipptes/org-mode/cppsrc" snippet-mode) (def-buffer "mathematics" "~/SparkleShare/mynotes/mathematics/" dired-mode) (def-buffer "math_basic.org" "/home/tong/SparkleShare/mynotes/mathematics/math_basic.org" org-mode) (def-buffer "c++" "~/SparkleShare/mynotes/c++/" dired-mode) (def-buffer "mynotes" "~/SparkleShare/mynotes/" dired-mode) (def-buffer "emacs" "~/SparkleShare/mynotes/emacs/" dired-mode) (def-buffer "org_c++.org" "/home/tong/SparkleShare/mynotes/emacs/org_c++.org" org-mode) (def-buffer "org_plot.org" "/home/tong/SparkleShare/mynotes/emacs/org_plot.org" org-mode) (def-buffer "plotsrc" "/home/tong/.spacemacs.d/snipptes/org-mode/plotsrc" snippet-mode) (def-buffer "pythonsrc" "/home/tong/.spacemacs.d/snipptes/org-mode/pythonsrc" snippet-mode) (def-buffer "umlsrc" "/home/tong/.spacemacs.d/snipptes/org-mode/umlsrc" snippet-mode) (def-buffer "org_uml.org" "/home/tong/SparkleShare/mynotes/emacs/org_uml.org" org-mode) (def-buffer "org_python.org" "/home/tong/SparkleShare/mynotes/emacs/org_python.org" org-mode) (def-buffer "python" "/home/tong/.spacemacs.d/snipptes/org-mode/python" snippet-mode) (def-buffer "abs_test.cpp" "/home/tong/SparkleShare/mynotes/c++/abs_test.cpp" c++-mode) (def-buffer "movie" "/home/tong/.spacemacs.d/snipptes/org-mode/movie" snippet-mode) (def-buffer "begin" "/home/tong/.spacemacs.d/snipptes/org-mode/begin" snippet-mode) (def-buffer "acronym" "/home/tong/.spacemacs.d/snipptes/org-mode/acronym" snippet-mode) (def-buffer "textbf" "/home/tong/.spacemacs.d/snipptes/org-mode/textbf" snippet-mode) (def-buffer "subf" "/home/tong/.spacemacs.d/snipptes/org-mode/subf" snippet-mode) (def-buffer "listing" "/home/tong/.spacemacs.d/snipptes/org-mode/listing" snippet-mode) (def-buffer "label" "/home/tong/.spacemacs.d/snipptes/org-mode/label" snippet-mode) (def-buffer "note" "/home/tong/.spacemacs.d/snipptes/org-mode/note" snippet-mode) (def-buffer "usepackage" "/home/tong/.spacemacs.d/snipptes/org-mode/usepackage" snippet-mode) (def-buffer "todo" "/home/tong/.spacemacs.d/snipptes/org-mode/todo" snippet-mode) (def-buffer "snipptes" "~/.spacemacs.d/snipptes/" dired-mode) (def-buffer ".spacemacs.d" "~/.spacemacs.d/" dired-mode) (def-buffer "tong" "~/" dired-mode) (def-buffer "SparkleShare" "~/SparkleShare/" dired-mode)) (def-wconf (((min-height . 8) (min-width . 30) (min-height-ignore . 6) (min-width-ignore . 12) (min-height-safe . 2) (min-width-safe . 6) (min-pixel-height . 136) (min-pixel-width . 240) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 96) (min-pixel-height-safe . 34) (min-pixel-width-safe . 48)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 1039) (total-width . 120) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5) (buffer "学习slam理论.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1318) (start . 472))) (vc (last . t) (pixel-width . 960) (pixel-height . 1039) (total-width . 120) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 520) (total-width . 120) (total-height . 31) (normal-height . 0.5004812319538018) (normal-width . 1.0) (buffer "init.el" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 21713) (start . 21170))) (hc (last . t) (pixel-width . 960) (pixel-height . 519) (total-width . 120) (total-height . 30) (normal-height . 0.49951876804619827) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 480) (pixel-height . 519) (total-width . 60) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5) (buffer "lim" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 59) (start . 1))) (leaf (last . t) (pixel-width . 480) (pixel-height . 519) (total-width . 60) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5) (buffer "sum" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 94) (start . 1))))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 8) (min-width . 30) (min-height-ignore . 6) (min-width-ignore . 12) (min-height-safe . 2) (min-width-safe . 6) (min-pixel-height . 136) (min-pixel-width . 240) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 96) (min-pixel-height-safe . 34) (min-pixel-width-safe . 48)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 1039) (total-width . 120) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5) (buffer "学习slam理论.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1318) (start . 472))) (vc (last . t) (pixel-width . 960) (pixel-height . 1039) (total-width . 120) (total-height . 61) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 960) (pixel-height . 520) (total-width . 120) (total-height . 31) (normal-height . 0.5004812319538018) (normal-width . 1.0) (buffer "init.el" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 21713) (start . 21170))) (hc (last . t) (pixel-width . 960) (pixel-height . 519) (total-width . 120) (total-height . 30) (normal-height . 0.49951876804619827) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 480) (pixel-height . 519) (total-width . 60) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5) (buffer "lim" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 59) (start . 1))) (leaf (last . t) (pixel-width . 480) (pixel-height . 519) (total-width . 60) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5) (buffer "sum" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 94) (start . 1)))))) "")))) t nil nil))