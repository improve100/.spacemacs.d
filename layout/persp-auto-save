;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "run.sh" "/home/tong/3rdparty/GH-ICP/script/run.sh" sh-mode) (def-buffer "touran_lidars_time_sync_TF_ground.launch" "/home/tong/codes/autonomous_driving/src/perception/ros/driver/rslidar_with_ring/rslidar_pointcloud/launch/touran_lidars_time_sync_TF_ground.launch" nxml-mode) (def-buffer "launch" "~/codes/autonomous_driving/src/perception/ros/driver/rslidar_with_ring/rslidar_pointcloud/launch/" dired-mode) (def-buffer "touran_lidars_time_sync_TF.launch" "/home/tong/codes/autonomous_driving/src/perception/ros/driver/rslidar_with_ring/rslidar_pointcloud/launch/touran_lidars_time_sync_TF.launch" nxml-mode) (def-buffer "rslidar_pointcloud" "~/codes/autonomous_driving/src/perception/ros/driver/rslidar_with_ring/rslidar_pointcloud/" dired-mode) (def-buffer "rslidar_with_ring" "~/codes/autonomous_driving/src/perception/ros/driver/rslidar_with_ring/" dired-mode) (def-buffer "driver" "~/codes/autonomous_driving/src/perception/ros/driver/" dired-mode) (def-buffer "ros" "~/codes/autonomous_driving/src/perception/ros/" dired-mode) (def-buffer "perception" "~/codes/autonomous_driving/src/perception/" dired-mode) (def-buffer "src<autonomous_driving>" "~/codes/autonomous_driving/src/" dired-mode) (def-buffer "autonomous_driving" "~/codes/autonomous_driving/" dired-mode) (def-buffer "codes" "~/codes/" dired-mode) (def-buffer "tong" "~/" dired-mode) (def-buffer "3rdparty" "~/3rdparty/" dired-mode) (def-buffer "GH-ICP" "~/3rdparty/GH-ICP/" dired-mode) (def-buffer "script" "~/3rdparty/GH-ICP/script/" dired-mode) (def-buffer "ghicp_reg.cpp" "/home/tong/3rdparty/GH-ICP/src/ghicp_reg.cpp" c++-mode) (def-buffer "ghicp_reg.h" "/home/tong/3rdparty/GH-ICP/include/ghicp_reg.h" c++-mode) (def-buffer "include" "~/3rdparty/GH-ICP/include/" dired-mode) (def-buffer "src<GH-ICP>" "~/3rdparty/GH-ICP/src/" dired-mode) (def-buffer "test" "~/3rdparty/GH-ICP/test/" dired-mode) (def-buffer "ghicp_main.cpp" "/home/tong/3rdparty/GH-ICP/test/ghicp_main.cpp" c++-mode) (def-buffer "README.md" "/home/tong/3rdparty/GH-ICP/README.md" markdown-mode) (def-buffer "img" "~/3rdparty/GH-ICP/img/" dired-mode) (def-buffer "build" "~/3rdparty/GH-ICP/build/" dired-mode) (def-buffer "bin" "~/3rdparty/GH-ICP/bin/" dired-mode) (def-buffer "Corres.txt" "/home/tong/3rdparty/GH-ICP/script/Corres.txt" text-mode) (def-buffer "CMakeLists.txt" "/home/tong/3rdparty/GH-ICP/CMakeLists.txt" cmake-mode) (def-buffer "home" "/home/" dired-mode) (def-buffer "下载" "~/下载/" dired-mode) (def-buffer "emacs-26.3" "~/下载/emacs-26.3/" dired-mode)) (def-wconf (((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 10) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 104) (min-pixel-width . 140) (min-pixel-height-ignore . 78) (min-pixel-width-ignore . 70) (min-pixel-height-safe . 26) (min-pixel-width-safe . 28)) hc (pixel-width . 1920) (pixel-height . 1043) (total-width . 274) (total-height . 80) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 961) (pixel-height . 1043) (total-width . 137) (total-height . 80) (normal-height . 1.0) (normal-width . 0.5) (buffer "ghicp_reg.cpp" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 18984) (start . 18090))) (vc (last . t) (pixel-width . 959) (pixel-height . 1043) (total-width . 137) (total-height . 80) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 959) (pixel-height . 523) (total-width . 137) (total-height . 40) (normal-height . 0.5) (normal-width . 1.0) (buffer "run.sh" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 692) (start . 1))) (leaf (last . t) (pixel-width . 959) (pixel-height . 520) (total-width . 137) (total-height . 40) (normal-height . 0.5) (normal-width . 1.0) (buffer "touran_lidars_time_sync_TF_ground.launch" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1263) (start . 1)))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 10) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 104) (min-pixel-width . 140) (min-pixel-height-ignore . 78) (min-pixel-width-ignore . 70) (min-pixel-height-safe . 26) (min-pixel-width-safe . 28)) hc (pixel-width . 1920) (pixel-height . 1043) (total-width . 274) (total-height . 80) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 961) (pixel-height . 1043) (total-width . 137) (total-height . 80) (normal-height . 1.0) (normal-width . 0.5) (buffer "ghicp_reg.cpp" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 18984) (start . 18090))) (vc (last . t) (pixel-width . 959) (pixel-height . 1043) (total-width . 137) (total-height . 80) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 959) (pixel-height . 523) (total-width . 137) (total-height . 40) (normal-height . 0.5) (normal-width . 1.0) (buffer "run.sh" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 692) (start . 1))) (leaf (last . t) (pixel-width . 959) (pixel-height . 520) (total-width . 137) (total-height . 40) (normal-height . 0.5) (normal-width . 1.0) (buffer "touran_lidars_time_sync_TF_ground.launch" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1263) (start . 1))))) "")))) t nil nil))