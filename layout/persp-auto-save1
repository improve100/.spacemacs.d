;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "new_day.org" "/home/tong/SparkleShare/mynotes/ubuntu/new_day.org" org-mode) (def-buffer "ubuntu" "~/SparkleShare/mynotes/ubuntu/" dired-mode) (def-buffer "mynotes" "~/SparkleShare/mynotes/" dired-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 2) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 212) (pixel-height . 61) (total-width . 212) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "new_day.org" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1437) (start . 1)))) (def-params ((term-eyebrowse-last-slot . 1) (term-eyebrowse-current-slot . 1) (term-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 2) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 212) (pixel-height . 61) (total-width . 212) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "new_day.org" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1437) (start . 1))) "")))) t nil nil) (def-persp "2" ((def-buffer "localization_debug_t.launch" "/home/tong/codes/autonomous_driving/src/common/ros/ms_common_launch/launch/localization_debug_t.launch" nxml-mode) (def-buffer "launch" "~/codes/autonomous_driving/src/common/ros/ms_common_launch/launch/" dired-mode) (def-buffer "ms_common_launch" "~/codes/autonomous_driving/src/common/ros/ms_common_launch/" dired-mode) (def-buffer "ros<common>" "~/codes/autonomous_driving/src/common/ros/" dired-mode) (def-buffer "common" "~/codes/autonomous_driving/src/common/" dired-mode) (def-buffer "ndt_localization_nodelet.cpp" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/apps/ndt_localization_nodelet.cpp" c++-mode) (def-buffer "pose_estimator.hpp" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/include/hdl_localization/pose_estimator.hpp" c++-mode) (def-buffer "hdl_localization<include>" "~/codes/autonomous_driving/src/localization/logic/hdl_localization/include/hdl_localization/" dired-mode) (def-buffer "include<hdl_localization>" "~/codes/autonomous_driving/src/localization/logic/hdl_localization/include/" dired-mode) (def-buffer "ndt_gpu_localization_nodelet.cpp" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/apps/ndt_gpu_localization_nodelet.cpp" c++-mode) (def-buffer "apps" "~/codes/autonomous_driving/src/localization/logic/hdl_localization/apps/" dired-mode) (def-buffer "package.xml<hdl_localization>" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/package.xml" web-mode) (def-buffer "package.xml<ms_localization_ndt>" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/package.xml" web-mode) (def-buffer "CMakeLists.txt<hdl_localization>" "/home/tong/codes/autonomous_driving/src/localization/logic/hdl_localization/CMakeLists.txt" cmake-mode) (def-buffer "hdl_localization<logic>" "~/codes/autonomous_driving/src/localization/logic/hdl_localization/" dired-mode) (def-buffer "CMakeLists.txt<ms_localization_ndt>" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/CMakeLists.txt" cmake-mode) (def-buffer "ndt_node.hh" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/include/ndt_node.hh" c++-mode) (def-buffer "include<ms_localization_ndt>" "~/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/include/" dired-mode) (def-buffer "ros<localization>" "~/codes/autonomous_driving/src/localization/ros/" dired-mode) (def-buffer "logic" "~/codes/autonomous_driving/src/localization/logic/" dired-mode) (def-buffer "localization" "~/codes/autonomous_driving/src/localization/" dired-mode) (def-buffer "src<autonomous_driving>" "~/codes/autonomous_driving/src/" dired-mode) (def-buffer "autonomous_driving" "~/codes/autonomous_driving/" dired-mode) (def-buffer "codes" "~/codes/" dired-mode) (def-buffer "tong" "~/" dired-mode) (def-buffer "ndt_node.cc" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/src/ndt_node.cc" c++-mode) (def-buffer "ndt_main.cc" "/home/tong/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/src/ndt_main.cc" c++-mode) (def-buffer "src<ms_localization_ndt>" "~/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/src/" dired-mode) (def-buffer "ms_localization_ndt" "~/codes/autonomous_driving/src/localization/ros/ms_localization_ndt/" dired-mode)) (def-wconf (((min-height . 8) (min-width . 20) (min-height-ignore . 4) (min-width-ignore . 5) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 8) (min-pixel-width . 20) (min-pixel-height-ignore . 4) (min-pixel-width-ignore . 5) (min-pixel-height-safe . 2) (min-pixel-width-safe . 4)) vc (pixel-width . 212) (pixel-height . 60) (total-width . 212) (total-height . 60) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (hc (pixel-width . 212) (pixel-height . 30) (total-width . 212) (total-height . 30) (normal-height . 0.5) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 106) (pixel-height . 30) (total-width . 106) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5) (buffer "ndt_node.cc" (selected) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1585) (start . 808))) (leaf (last . t) (pixel-width . 106) (pixel-height . 30) (total-width . 106) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5) (buffer "ndt_node.hh" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 773) (start . 1)))) (hc (last . t) (pixel-width . 212) (pixel-height . 30) (total-width . 212) (total-height . 30) (normal-height . 0.5) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 118) (pixel-height . 30) (total-width . 118) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5545023696682461) (buffer "localization_debug_t.launch" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 1) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 909) (start . 428))) (leaf (last . t) (pixel-width . 94) (pixel-height . 30) (total-width . 94) (total-height . 30) (normal-height . 1.0) (normal-width . 0.44549763033175355) (buffer "pose_estimator.hpp" (selected) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 885) (start . 182)))))) (def-params ((term-eyebrowse-last-slot . 1) (term-eyebrowse-current-slot . 1) (term-eyebrowse-window-configs (1 (((min-height . 8) (min-width . 20) (min-height-ignore . 4) (min-width-ignore . 5) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 8) (min-pixel-width . 20) (min-pixel-height-ignore . 4) (min-pixel-width-ignore . 5) (min-pixel-height-safe . 2) (min-pixel-width-safe . 4)) vc (pixel-width . 212) (pixel-height . 60) (total-width . 212) (total-height . 60) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (hc (pixel-width . 212) (pixel-height . 30) (total-width . 212) (total-height . 30) (normal-height . 0.5) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 106) (pixel-height . 30) (total-width . 106) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5) (buffer "ndt_node.cc" (selected) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1585) (start . 808))) (leaf (last . t) (pixel-width . 106) (pixel-height . 30) (total-width . 106) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5) (buffer "ndt_node.hh" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 773) (start . 1)))) (hc (last . t) (pixel-width . 212) (pixel-height . 30) (total-width . 212) (total-height . 30) (normal-height . 0.5) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 118) (pixel-height . 30) (total-width . 118) (total-height . 30) (normal-height . 1.0) (normal-width . 0.5545023696682461) (buffer "localization_debug_t.launch" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 1) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 909) (start . 428))) (leaf (last . t) (pixel-width . 94) (pixel-height . 30) (total-width . 94) (total-height . 30) (normal-height . 1.0) (normal-width . 0.44549763033175355) (buffer "pose_estimator.hpp" (selected) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 885) (start . 182))))) "")))) nil nil nil))