;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "init.el" "/home/tong/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "mathematics" "~/SparkleShare/mynotes/mathematics/" dired-mode) (def-buffer "学习slam理论.org" "/home/tong/SparkleShare/mynotes/mathematics/学习slam理论.org" org-mode) (def-buffer "c++_test.org" "/home/tong/SparkleShare/mynotes/c++/c++_test.org" org-mode) (def-buffer "gtd" "~/SparkleShare/mynotes/gtd/" dired-mode) (def-buffer "2019_task.org" "/home/tong/SparkleShare/mynotes/gtd/2019_task.org" org-mode) (def-buffer "c++" "~/SparkleShare/mynotes/c++/" dired-mode) (def-buffer "cout.cpp" "/home/tong/SparkleShare/mynotes/c++/cout.cpp" c++-mode) (def-buffer "mynotes" "~/SparkleShare/mynotes/" dired-mode) (def-buffer "ltximg" "~/SparkleShare/mynotes/mathematics/ltximg/" dired-mode) (def-buffer "org-ltximg_e7a07742d73a3b62ce2f62c924f7f34805c76855.png" "/home/tong/SparkleShare/mynotes/mathematics/ltximg/org-ltximg_e7a07742d73a3b62ce2f62c924f7f34805c76855.png" image-mode) (def-buffer "org-ltximg_aa11b77f2686a2bd265a31c5709b7ca653936471.png" "/home/tong/SparkleShare/mynotes/mathematics/ltximg/org-ltximg_aa11b77f2686a2bd265a31c5709b7ca653936471.png" image-mode) (def-buffer "org-ltximg_702c8c1211cc02971e548545af8d6d8a5256466f.png" "/home/tong/SparkleShare/mynotes/mathematics/ltximg/org-ltximg_702c8c1211cc02971e548545af8d6d8a5256466f.png" image-mode) (def-buffer "org-ltximg_39350e2e75bba09f0480b6c6131620585055811a.png" "/home/tong/SparkleShare/mynotes/mathematics/ltximg/org-ltximg_39350e2e75bba09f0480b6c6131620585055811a.png" image-mode) (def-buffer "image" "~/SparkleShare/mynotes/mathematics/image/" dired-mode) (def-buffer "emacs" "~/SparkleShare/mynotes/emacs/" dired-mode) (def-buffer "org_uml.org" "/home/tong/SparkleShare/mynotes/emacs/org_uml.org" org-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 160) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1028) (pixel-height . 1039) (total-width . 128) (total-height . 61) (normal-height . 1.0) (normal-width . 0.534932221063608) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 2963) (start . 2108))) (leaf (last . t) (pixel-width . 892) (pixel-height . 1039) (total-width . 112) (total-height . 61) (normal-height . 1.0) (normal-width . 0.46506777893639206) (buffer "*Org-Babel Error Output*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 160) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1028) (pixel-height . 1039) (total-width . 128) (total-height . 61) (normal-height . 1.0) (normal-width . 0.534932221063608) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 2963) (start . 2108))) (leaf (last . t) (pixel-width . 892) (pixel-height . 1039) (total-width . 112) (total-height . 61) (normal-height . 1.0) (normal-width . 0.46506777893639206) (buffer "*Org-Babel Error Output*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) "")))) t nil nil))