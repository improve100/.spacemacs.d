;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "orb_slam2_mono.cpp" "/home/tong/3rdparty/ros-orb-slam2/src/orb_slam2_mono.cpp" c++-mode) (def-buffer "README.org" "/home/tong/.spacemacs.d/layers/mcu/README.org" org-mode) (def-buffer "camtest.launch" "/home/tong/3rdparty/ros-orb-slam2/launch/camtest.launch" nxml-mode) (def-buffer "launch" "~/3rdparty/ros-orb-slam2/launch/" dired-mode) (def-buffer "ros-orb-slam2" "~/3rdparty/ros-orb-slam2/" dired-mode) (def-buffer "conf" "~/3rdparty/ros-orb-slam2/conf/" dired-mode) (def-buffer "fpvcam.yaml" "/home/tong/3rdparty/ros-orb-slam2/conf/fpvcam.yaml" yaml-mode) (def-buffer "src<ros-orb-slam2>" "~/3rdparty/ros-orb-slam2/src/" dired-mode) (def-buffer "3rdparty" "~/3rdparty/" dired-mode) (def-buffer "ORBSLAM2_with_pointcloud_map" "~/3rdparty/ORBSLAM2_with_pointcloud_map/" dired-mode) (def-buffer "ORB_SLAM2_modified" "~/3rdparty/ORBSLAM2_with_pointcloud_map/ORB_SLAM2_modified/" dired-mode) (def-buffer "Examples" "~/3rdparty/ORBSLAM2_with_pointcloud_map/ORB_SLAM2_modified/Examples/" dired-mode) (def-buffer "ROS" "~/3rdparty/ORBSLAM2_with_pointcloud_map/ORB_SLAM2_modified/Examples/ROS/" dired-mode) (def-buffer "src<ROS>" "~/3rdparty/ORBSLAM2_with_pointcloud_map/ORB_SLAM2_modified/Examples/ROS/src/" dired-mode) (def-buffer "CMakeLists.txt<src>" "/home/tong/3rdparty/ORBSLAM2_with_pointcloud_map/ORB_SLAM2_modified/Examples/ROS/src/CMakeLists.txt" cmake-mode) (def-buffer "CMakeLists.txt<ros-orb-slam2>" "/home/tong/3rdparty/ros-orb-slam2/CMakeLists.txt" cmake-mode) (def-buffer "Tracking.cpp" "/home/tong/3rdparty/ORB-SLAM2/src/Tracking.cpp" c++-mode) (def-buffer "System.cpp" "/home/tong/3rdparty/ORB-SLAM2/src/System.cpp" c++-mode) (def-buffer "test.py" "/home/tong/learning/python/test.py" python-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 16) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 180) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 144) (min-pixel-height-safe . 17) (min-pixel-width-safe . 36)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (leaf (pixel-width . 954) (pixel-height . 1039) (total-width . 106) (total-height . 61) (normal-height . 1.0) (normal-width . 0.49687499999999996) (buffer "orb_slam2_mono.cpp" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1706) (start . 508))) (leaf (last . t) (pixel-width . 966) (pixel-height . 1039) (total-width . 107) (total-height . 61) (normal-height . 1.0) (normal-width . 0.503125) (buffer "camtest.launch" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1980) (start . 1))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 16) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 180) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 144) (min-pixel-height-safe . 17) (min-pixel-width-safe . 36)) hc (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (combination-limit . t) (leaf (pixel-width . 954) (pixel-height . 1039) (total-width . 106) (total-height . 61) (normal-height . 1.0) (normal-width . 0.49687499999999996) (buffer "orb_slam2_mono.cpp" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1706) (start . 508))) (leaf (last . t) (pixel-width . 966) (pixel-height . 1039) (total-width . 107) (total-height . 61) (normal-height . 1.0) (normal-width . 0.503125) (buffer "camtest.launch" (selected) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1980) (start . 1)))) "")))) t nil nil) (def-persp "test" nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 90) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 36) (min-pixel-height-safe . 17) (min-pixel-width-safe . 18)) leaf (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "*spacemacs*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 8742) (start . 4900)))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 90) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 36) (min-pixel-height-safe . 17) (min-pixel-width-safe . 18)) leaf (pixel-width . 1920) (pixel-height . 1039) (total-width . 213) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "*spacemacs*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 8742) (start . 4900))) "")))) nil nil nil))